import { useState, useEffect } from 'react';
import styles from './basket.module.scss';
import { Link } from 'react-router-dom';

const BasketComponent = ({
    items,
    onRemove,
    onUpdateQuantity,
    onClear
}) => {
    const [phone, setPhone] = useState('+7');
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [orderSuccess, setOrderSuccess] = useState(false);
    const [error, setError] = useState('');

    const totalPrice = items.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    const totalItems = items.reduce((sum, item) => sum + item.quantity, 0);

    const handlePhoneChange = (e) => {
        let value = e.target.value;
        
        if (!value.startsWith('+7')) {
            value = '+7';
        }
        
        if (value.length <= 12) {
            setPhone(value);
        }
    };

    const handleSubmitOrder = async () => {
        if (items.length === 0) {
            setError('–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É');
            return;
        }

        const phoneRegex = /^\+7\d{10}$/;
        if (!phoneRegex.test(phone)) {
            setError('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
            return;
        }

        setIsSubmitting(true);
        setError('');

        try {
            const cart = items.map(item => ({
                id: item.id,
                quantity: item.quantity
            }));

            const response = await fetch('http://o-complex.com:1337/order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    phone: phone,
                    cart: cart
                })
            });

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
            }

            const result = await response.json();
            console.log('Order success:', result);
            setOrderSuccess(true);
            onClear();
        } catch (err) {
            console.error('Order error:', err);
            setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        } finally {
            setIsSubmitting(false);
        }
    };

    const formatPhoneDisplay = (phone) => {
        if (phone.length <= 2) return phone;
        if (phone.length <= 5) return `${phone.slice(0, 2)} (${phone.slice(2)}`;
        if (phone.length <= 8) return `${phone.slice(0, 2)} (${phone.slice(2, 5)}) ${phone.slice(5)}`;
        if (phone.length <= 10) return `${phone.slice(0, 2)} (${phone.slice(2, 5)}) ${phone.slice(5, 8)}-${phone.slice(8)}`;
        return `${phone.slice(0, 2)} (${phone.slice(2, 5)}) ${phone.slice(5, 8)}-${phone.slice(8, 10)}-${phone.slice(10)}`;
    };

    return (
        <div className={styles.container}>
            <nav className={styles.nav}>
                <Link to="/" className={styles.navLink}>
                    <span className={styles.navIcon}>üí¨</span>
                    <span>–û—Ç–∑—ã–≤—ã</span>
                </Link>
                
                <Link to="/Product" className={styles.navLink}>
                    <span className={styles.navIcon}>üçî</span>
                    <span>–ú–µ–Ω—é</span>
                </Link>
            </nav>

            <div className={styles.basketContainer}>
                <h1 className={styles.title}>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞</h1>
                <p className={styles.itemsCount}>{items.length} {items.length === 1 ? '—Ç–æ–≤–∞—Ä' : items.length < 5 ? '—Ç–æ–≤–∞—Ä–∞' : '—Ç–æ–≤–∞—Ä–æ–≤'}</p>
                
                {orderSuccess ? (
                    <div className={styles.successMessage}>
                        <div className={styles.successIcon}>‚úì</div>
                        <h2>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h2>
                        <p>–ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ –Ω–æ–º–µ—Ä—É {formatPhoneDisplay(phone)}</p>
                        <Link to="/Product" className={styles.continueShopping}>
                            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
                        </Link>
                    </div>
                ) : items.length === 0 ? (
                    <div className={styles.emptyBasket}>
                        <div className={styles.emptyIcon}>üõí</div>
                        <h2>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
                        <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –º–µ–Ω—é</p>
                        <Link to="/Product" className={styles.shopButton}>
                            –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é
                        </Link>
                    </div>
                ) : (
                    <>
                        <div className={styles.itemsList}>
                            {items.map(item => (
                                <div key={item.id} className={styles.itemCard}>
                                    <div className={styles.itemImageContainer}>
                                        {item.image ? (
                                            <img src={item.image} alt={item.title} />
                                        ) : (
                                            <div className={styles.itemImage}>üõçÔ∏è</div>
                                        )}
                                    </div>
                                    
                                    <div className={styles.itemDetails}>
                                        <h3 className={styles.itemName}>{item.title}</h3>
                                        
                                        <div className={styles.priceControls}>
                                            <div className={styles.quantityControl}>
                                                <button 
                                                    onClick={() => onUpdateQuantity(item.id, item.quantity - 1)}
                                                    className={styles.quantityButton}
                                                    disabled={item.quantity <= 1}
                                                >
                                                    ‚àí
                                                </button>
                                                <span className={styles.quantity}>{item.quantity}</span>
                                                <button 
                                                    onClick={() => onUpdateQuantity(item.id, item.quantity + 1)}
                                                    className={styles.quantityButton}
                                                >
                                                    +
                                                </button>
                                            </div>
                                            
                                            <div className={styles.priceWrapper}>
                                                <p className={styles.itemTotal}>{item.price * item.quantity} ‚ÇΩ</p>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <button 
                                        onClick={() => onRemove(item.id)}
                                        className={styles.removeButton}
                                        aria-label="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"
                                    >
                                        &times;
                                    </button>
                                </div>
                            ))}
                        </div>
                        
                        <div className={styles.orderForm}>
                            <div className={styles.phoneInputContainer}>
                                <label htmlFor="phone" className={styles.phoneLabel}>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>
                                <input
                                    type="tel"
                                    id="phone"
                                    value={phone}
                                    onChange={handlePhoneChange}
                                    className={styles.phoneInput}
                                    placeholder="+7 (___) ___-__-__"
                                    maxLength="12"
                                />
                            </div>
                            
                            {error && <div className={styles.errorMessage}>{error}</div>}
                            
                            <div className={styles.summaryCard}>
                                <div className={styles.summaryRow}>
                                    <span>–¢–æ–≤–∞—Ä–æ–≤:</span>
                                    <span>{items.length} —à—Ç.</span>
                                </div>
                                <div className={styles.summaryRow}>
                                    <span>–°—É–º–º–∞:</span>
                                    <span className={styles.totalPrice}>{totalPrice} ‚ÇΩ</span>
                                </div>
                                
                                <div className={styles.actionButtons}>
                                    <button 
                                        onClick={onClear}
                                        className={styles.clearButton}
                                        disabled={isSubmitting}
                                    >
                                        –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
                                    </button>
                                    
                                    <button 
                                        onClick={handleSubmitOrder}
                                        className={styles.checkoutButton}
                                        disabled={isSubmitting}
                                    >
                                        {isSubmitting ? '–û—Ñ–æ—Ä–º–ª—è–µ–º...' : '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'}
                                    </button>
                                </div>
                            </div>
                        </div>
                    </>
                )}
            </div>
        </div>
    )
}

export default BasketComponent;